-- DIAGN√ìSTICO: BUSCADOR Y CHAT
-- Script para identificar problemas espec√≠ficos

BEGIN;

-- =====================================================
-- 1. DIAGN√ìSTICO DEL BUSCADOR
-- =====================================================

-- Verificar que las funciones de b√∫squeda existen
SELECT 
    'FUNCIONES DE B√öSQUEDA:' as check_type,
    proname as function_name,
    CASE 
        WHEN proname IS NOT NULL THEN '‚úÖ EXISTE'
        ELSE '‚ùå NO EXISTE'
    END as status
FROM pg_proc 
WHERE proname IN ('get_nearby_profiles', 'search_profiles')
UNION ALL
SELECT 
    'TOTAL FUNCIONES B√öSQUEDA:' as check_type,
    COUNT(*)::text as function_name,
    CASE 
        WHEN COUNT(*) = 2 THEN '‚úÖ COMPLETO'
        ELSE '‚ö†Ô∏è INCOMPLETO'
    END as status
FROM pg_proc 
WHERE proname IN ('get_nearby_profiles', 'search_profiles');

-- Verificar perfiles disponibles para b√∫squeda
SELECT 
    'PERFILES PARA B√öSQUEDA:' as check_type,
    COUNT(*) as total_profiles,
    COUNT(latitud) as with_location,
    COUNT(alias) as with_alias
FROM public.profiles;

-- Probar b√∫squeda general (sin filtros)
SELECT 'PRUEBA B√öSQUEDA GENERAL:' as test_name;
SELECT 
    id,
    alias,
    gender,
    created_at
FROM search_profiles(NULL, NULL, NULL, NULL, 18, 99, 10, 0);

-- Probar b√∫squeda por ubicaci√≥n (Buenos Aires)
SELECT 'PRUEBA B√öSQUEDA POR UBICACI√ìN:' as test_name;
SELECT 
    id,
    alias,
    distance_km
FROM get_nearby_profiles(-34.6118, -58.3960, 1000);

-- =====================================================
-- 2. DIAGN√ìSTICO DEL CHAT
-- =====================================================

-- Verificar tabla de mensajes
SELECT 
    'TABLA MESSAGES:' as check_type,
    COUNT(*) as total_messages,
    COUNT(DISTINCT sender_id) as unique_senders,
    COUNT(DISTINCT recipient_id) as unique_recipients
FROM public.messages;

-- Verificar mensajes espec√≠ficos por usuario
SELECT 
    'MENSAJES POR USUARIO:' as check_type,
    sender_id,
    recipient_id,
    content,
    sent_at
FROM public.messages
ORDER BY sent_at DESC
LIMIT 10;

-- Verificar pol√≠ticas RLS de messages
SELECT 
    'POL√çTICAS MESSAGES:' as check_type,
    policyname,
    cmd as action,
    CASE 
        WHEN policyname IS NOT NULL THEN '‚úÖ EXISTE'
        ELSE '‚ùå NO EXISTE'
    END as status
FROM pg_policies 
WHERE schemaname = 'public' 
    AND tablename = 'messages'
ORDER BY cmd;

-- Verificar realtime en messages
SELECT 
    'MESSAGES EN REALTIME:' as check_type,
    CASE 
        WHEN EXISTS (
            SELECT 1 FROM pg_publication_tables 
            WHERE pubname = 'supabase_realtime' 
                AND schemaname = 'public' 
                AND tablename = 'messages'
        ) THEN '‚úÖ HABILITADO'
        ELSE '‚ùå DESHABILITADO'
    END as status;

-- =====================================================
-- 3. VERIFICAR POL√çTICAS RLS ESPEC√çFICAS
-- =====================================================

-- Verificar que profiles permite SELECT
SELECT 
    'PROFILES SELECT:' as check_type,
    COUNT(*) as policy_count,
    CASE 
        WHEN COUNT(*) > 0 THEN '‚úÖ PERMITIDO'
        ELSE '‚ùå BLOQUEADO'
    END as status
FROM pg_policies 
WHERE schemaname = 'public' 
    AND tablename = 'profiles' 
    AND cmd = 'SELECT';

-- Verificar que messages permite SELECT
SELECT 
    'MESSAGES SELECT:' as check_type,
    COUNT(*) as policy_count,
    CASE 
        WHEN COUNT(*) > 0 THEN '‚úÖ PERMITIDO'
        ELSE '‚ùå BLOQUEADO'
    END as status
FROM pg_policies 
WHERE schemaname = 'public' 
    AND tablename = 'messages' 
    AND cmd = 'SELECT';

-- =====================================================
-- 4. DATOS DE PRUEBA
-- =====================================================

-- Mostrar todos los perfiles (para ver si el buscador deber√≠a encontrarlos)
SELECT 
    'TODOS LOS PERFILES:' as info,
    id,
    alias,
    gender,
    sexual_orientation,
    latitud,
    longitud,
    created_at
FROM public.profiles
ORDER BY created_at;

-- =====================================================
-- 5. RESUMEN DE PROBLEMAS POTENCIALES
-- =====================================================

SELECT 'üìä DIAGN√ìSTICO COMPLETADO' as status;
SELECT 'Revisar resultados arriba para identificar problemas espec√≠ficos' as next_step;

ROLLBACK; -- No hacer cambios, solo diagn√≥stico
