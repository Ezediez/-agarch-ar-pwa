rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Reglas para usuarios (más restrictivas - solo el dueño puede escribir)
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId;
    }

    // Reglas para validaciones (más restrictivas)
    match /validations/{validationId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == request.resource.data.userId;
    }

    // Reglas para perfiles de usuario (públicos para leer, solo el dueño puede escribir)
    match /profiles/{profileId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == profileId;
      allow update: if request.auth.uid == profileId;
    }

    // Reglas para posts (públicos para leer, solo el autor puede escribir)
    match /posts/{postId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null; // Cualquier usuario autenticado puede crear posts
      allow update: if request.auth.uid == resource.data.user_id; // Solo el autor puede editar
      allow delete: if request.auth.uid == resource.data.user_id; // Solo el autor puede eliminar
    }

    // Reglas para stories (públicos para leer, solo el autor puede escribir)
    match /stories/{storyId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null; // Cualquier usuario autenticado puede crear stories
      allow update: if request.auth.uid == resource.data.user_id; // Solo el autor puede editar
      allow delete: if request.auth.uid == resource.data.user_id; // Solo el autor puede eliminar
    }

    // Reglas para likes (más abiertas para funcionalidad)
    match /likes/{likeId} {
      allow read, write: if request.auth != null;
    }

    // Reglas para post_likes
    match /post_likes/{likeId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null; // Cualquier usuario puede dar like
      allow delete: if request.auth.uid == resource.data.user_id; // Solo el dueño del like puede quitarlo
    }

    // Reglas para comentarios
    match /comentarios/{commentId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null; // Cualquier usuario puede comentar
      allow update: if request.auth.uid == resource.data.user_id; // Solo el autor puede editar
      allow delete: if request.auth.uid == resource.data.user_id; // Solo el autor puede eliminar
    }

    // Reglas para conversaciones (más restrictivas - solo miembros)
    match /conversations/{conversationId} {
      allow read, delete: if request.auth.uid in resource.data.members;
      allow create: if request.auth.uid in request.resource.data.members;

      match /messages/{messageId} {
        allow read, create: if request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.members;
        allow update, delete: if request.auth.uid == resource.data.authorId;
      }
    }

    // Reglas para user_likes (sistema de seguidos)
    match /user_likes/{likeId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == request.resource.data.user_id; // Solo el usuario puede crear sus propios likes
      allow delete: if request.auth.uid == resource.data.user_id; // Solo el dueño del like puede eliminarlo
    }

    // Reglas para matches
    match /matches/{matchId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update: if request.auth.uid == resource.data.user_id || request.auth.uid == resource.data.matched_user_id;
      allow delete: if request.auth.uid == resource.data.user_id || request.auth.uid == resource.data.matched_user_id;
    }

    // Reglas para publicidades (Portal de Anunciantes)
    match /advertisements/{adId} {
      allow read: if request.auth != null; // Todos los usuarios autenticados pueden leer publicidades
      allow create: if request.auth != null && request.auth.uid == request.resource.data.advertiser_id; // Solo el anunciante puede crear
      allow update: if request.auth != null && request.auth.uid == resource.data.advertiser_id; // Solo el anunciante puede editar
      allow delete: if request.auth != null && request.auth.uid == resource.data.advertiser_id; // Solo el anunciante puede eliminar
    }

    // Reglas para anunciantes (usuarios del Portal de Anunciantes)
    match /advertisers/{advertiserId} {
      allow read: if request.auth != null && request.auth.uid == advertiserId; // Solo el anunciante puede leer su perfil
      allow create: if request.auth != null && request.auth.uid == advertiserId; // Solo puede crear su propio perfil
      allow update: if request.auth != null && request.auth.uid == advertiserId; // Solo puede editar su perfil
    }

    // Reglas para seguidos (following) - para la funcionalidad de guardar perfil
    match /following/{followingId} {
      allow read: if request.auth != null && request.auth.uid == resource.data.user_id; // Solo el usuario puede leer sus seguidos
      allow create: if request.auth != null && request.auth.uid == request.resource.data.user_id; // Solo puede seguir desde su cuenta
      allow delete: if request.auth != null && request.auth.uid == resource.data.user_id; // Solo puede dejar de seguir desde su cuenta
    }
  }
}